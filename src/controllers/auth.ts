import express from "express";
import bcrypt from "bcryptjs";
import dotenv from "dotenv";
import jwt from "jsonwebtoken";
import sgMail from "@sendgrid/mail";
// Model & Type Imports
import User from "../models/user";
// import UserAccount from "../models/userAccount";
import { IUser, IUserAccount } from "../utils/InterfacesUsed";
import UserAccount from "../models/userAccount";


dotenv.config()

const router: express.Router = express.Router()

const SECRET: string = process.env.SECRET || ""

// Test Route
router.get("/", async (request: express.Request, response: express.Response) => {
    console.log(request.body)
    response.status(200).json({
        page: "AuthRouter",
        status: "Successfully Reached"
    })
})

router.post("/signup", async (request: express.Request, response: express.Response) => {
    try {
        // Just to have name in proper case
        request.body.name = request.body.name.toLowerCase().replace(/(?:^|\s|')\w/g, (m: string) => m.toUpperCase());
        // Hash password
        request.body.password = await bcrypt.hash(request.body.password, await bcrypt.genSalt(10))

        const userObject: IUser = {
            username: request.body.username.toLowerCase(),
            password: request.body.password,
            email: request.body.email.toLowerCase(),
            resetToken: "",
            resetTokenExpiry: new Date()
        }
        //generate user from received data
        const user: IUser = await User.create(userObject)

        const userAccountDetails: IUserAccount = {
            name: request.body.name,
            badgeName: request.body.badgeName,
            email: request.body.email.toLowerCase(),
            groupNames: [],
            currentTask: ["Contact Manager To Be Added To Group", "System"],
            adminOf: [],
            isSiteAdmin: false,
            isGroupAdmin: false,
            isScheduleAdmin: false
        }

        const newUserAccount = await UserAccount.create(userAccountDetails)

        response.status(200).json({message: "User Created",data:{user: user, accountData: newUserAccount}})

    } catch(error){
        response.status(400).json({
            message: "User Creation Failed",
            data: error
        })
    }
})

router.post("/login", async(request: express.Request, response: express.Response) => {
    try {
        request.body.username = request.body.username.toLowerCase()
        const {username, password} = request.body
        
        // Searching collection for username
        const user = await User.findOne({username})
        // If user exists checks for password
        if (user){
            const passwordCheck: boolean = await bcrypt.compare(password, user.password)
            if(passwordCheck){
                const payload: object = {username}
                const token = await jwt.sign(payload, SECRET)
                response.cookie("token", token, {
                    httpOnly: true,
                    path:"/",
                    sameSite: "none",
                    secure: request.hostname === "localhost" ? false : true
                }).json({payload, status: "logged in"})
            } else {
                response.status(400).json({
                    message: "Username/Password is incorrect",
                    status: "Failed Pass Check"
                })
            }
        } else {
            response.status(400).json({
                message: "Username/Password is incorrect",
                status: "Failed User Check"
            })
        }
        
    } catch(error) {
        response.status(400).json({
            message: "Failed to Login",
            data: error
        })
    }
})

router.post("/forgotpassword", async (request: express.Request, response: express.Response) => {
    try {
        request.body.email = request.body.email.toLowerCase()
        const user = await User.findOne({email: request.body.email})
        if(user) {

            // Beginning of sending autogenerated email
            sgMail.setApiKey(process.env.SENDGRID_API_KEY || "")

            const msg = {
                to: request.body.email,
                from: "speedycheckin.automated@gmail.com",
                subject: "Speedy CheckIn Password Reset",
                text: "Password Reset Email",
                html: `<div style="background-color:#ffca00;margin:0;padding:0"><table class="m_nl-container" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="background-color:#ffca00"><tbody><tr><td><table class="m_row m_row-1" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation"><tbody><tr><td><table class="m_row-content m_stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="background-color:#fff;color:#000;width:600px;margin:0 auto" width="600"><tbody><tr><td class="m_column m_column-1" width="100%" style="font-weight:400;text-align:left;padding-bottom:5px;padding-top:5px;vertical-align:top;border-top:0;border-right:0;border-bottom:0;border-left:0"><table class="m_text_block m_block-1" width="100%" border="0" cellpadding="10" cellspacing="0" role="presentation" style="word-break:break-word"><tbody><tr><td class="m_pad"><div style="font-family:Arial,sans-serif"><div style="font-size:14px;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;color:#555;line-height:1.2"><p style="margin:0;font-size:14px;text-align:center">
                <strong><span style="font-size:34px;color:#000000">Speedy Check In Password Reset</span></strong></p></div></div></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table><table class="m_row m_row-2" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="background-color:#fed149"><tbody><tr><td><table class="m_row-content m_stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="background-color:#fff;color:#000;width:600px;margin:0 auto" width="600"><tbody><tr><td class="m_column m_column-1" width="100%" style="font-weight:400;text-align:left;padding-top:5px;vertical-align:top;border-top:0;border-right:0;border-bottom:0;border-left:0"><table class="m_image_block m_block-1" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation">
                <tbody><tr><td class="m_pad" style="width:100%"><div class="m_alignment" align="center" style="line-height:10px"><img src="https://ci4.googleusercontent.com/proxy/XW7Tekh8vLrqtlb4tmWE8pxGu5s2-EzeB9gmYgUB4MOwZeTYnnCFZtW2Twxa0jNN6JLmq8or4G7e_vt5X4kefVfdJjM8D64ikCMrLR_5hepvWaahxdP_elTq9_OrtkIjhZ26bPus3pwLseE8jjH-hmsaYzXtaDGdUmBUawvL61aU6TKER1pwIHufNtEcNOoU9QOC1N-VG2ZZHo9iponrULGuijCWG6Wn0YLcyT8lQcxjKceyoQ83QOjfXGRnaFeLd4kVd8qAn9yzHuL4-v9L79Xc66VojOM47aZnPGD4DuesdBw_=s0-d-e1-ft#https://d15k2d11r6t6rl.cloudfront.net/public/users/Integrators/0db9f180-d222-4b2b-9371-cf9393bf4764/0bd8b69e-4024-4f26-9010-6e2a146401fb/Email%20Templates%20Assets%20Folder/PRTS01/promotion_tech_banner_01.jpg" style="display:block;height:auto;border:0;max-width:600px;width:100%" width="600" alt="Alternate text" title="Alternate text"></div></td></tr></tbody></table><table class="m_text_block m_block-2" width="100%" border="0" cellpadding="20" cellspacing="0" role="presentation" style="word-break:break-word"><tbody><tr><td class="m_pad"><div style="font-family:sans-serif"><div style="font-size:12px;font-family:Tahoma,Verdana,Segoe,sans-serif;color:#555;line-height:1.2"><p style="margin:0;font-size:14px;text-align:center">
                <strong><span style="font-size:30px">FORGOT</span></strong><br><strong><span style="font-size:30px">YOUR PASSWORD?</span></strong></p></div></div></td></tr></tbody></table><table class="m_text_block m_block-3" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation" style="word-break:break-word"><tbody><tr><td class="m_pad" style="padding-bottom:20px;padding-left:20px;padding-right:20px;padding-top:10px"><div style="font-family:sans-serif"><div style="font-size:12px;font-family:Tahoma,Verdana,Segoe,sans-serif;color:#555;line-height:1.2"><p style="margin:0;font-size:14px;text-align:center"><span style="font-size:16px">Not to worry, we got you! Letâ€™s get you a new password.</span></p></div></div></td></tr></tbody></table><table class="m_button_block m_block-4" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation">
                <tbody><tr><td class="m_pad" style="padding-bottom:30px;padding-left:10px;padding-right:10px;padding-top:10px;text-align:center"><div class="m_alignment" align="center">
                <div style="text-decoration:none;display:inline-block;color:#fff;background-color:#f57153;border-radius:35px;width:auto;border-top:0 solid transparent;font-weight:undefined;border-right:0 solid transparent;border-bottom:0 solid transparent;border-left:0 solid transparent;padding-top:15px;padding-bottom:15px;font-family:Tahoma,Verdana,Segoe,sans-serif;font-size:16px;text-align:center;word-break:keep-all">
                <span style="padding-left:30px;padding-right:30px;font-size:16px;display:inline-block;letter-spacing:normal"><span style="word-break:break-word;line-height:32px">RESET PASSWORD</span></span></div></div></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table><table class="m_row m_row-3" align="center" width="100%" border="0" cellpadding="0" cellspacing="0" role="presentation">
                <tbody><tr><td><table class="m_row-content m_stack" align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="background-color:#fff;color:#000;width:600px;margin:0 auto" width="600"><tbody><tr><td class="m_column m_column-1" width="100%" style="font-weight:400;text-align:left;padding-bottom:5px;padding-top:5px;vertical-align:top;border-top:0;border-right:0;border-bottom:0;border-left:0"><div class="m_spacer_block m_block-1" style="height:20px;line-height:20px;font-size:1px">&hairsp;</div></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table><div style="background-color:transparent">
                    <div style="Margin:0 auto;min-width:320px;max-width:500px;word-wrap:break-word;word-break:break-word;background-color:transparent" class="m_block-grid">
                        <div style="border-collapse:collapse;display:table;width:100%;background-color:transparent">
                            <div class="m_col m_num12" style="min-width:320px;max-width:500px;display:table-cell;vertical-align:top">
                                <div style="background-color:transparent;width:100%!important">
                                    <div style="border-top:0px solid transparent;border-left:0px solid transparent;border-bottom:0px solid transparent;border-right:0px solid transparent;padding-top:15px;padding-bottom:15px;padding-right:0px;padding-left:0px">
                                        <div align="center" class="m_img-container m_center m_autowidth" style="padding-right:0px;padding-left:0px">
                                            <a href="https://www.google.com/url?q=https://goo.gl/sDhD5J&amp;source=gmail-html&amp;ust=1693183979405000&amp;usg=AOvVaw3pSNlwNVB1M-6m4gtv3ORU" title="https://www.enginemailer.com/?utm_source=newsletter&amp;utm_medium=email&amp;utm_campaign=ff_footer" target="_blank" rel="noreferrer">
                                                <img class="m_center m_autowidth" align="center" border="0" src="https://ci5.googleusercontent.com/proxy/cXHzvLjPz4ijnsD-NtgDrpndAOt-llXxXGGjZqXvw1DoEZ8-wecdsy7_J9eXTkZIqXqWmibK5W8B9lcuDXPnvSfrgciYTPwJOY0H9y4EUuOAR8HYyvqSfpzZ-KH8_NiwtzsPUyJ1qGjZLOwXJRM2LVPncifl6jSwpLhqzORfYyxhfsgAkruRS2Kc1T0f=s0-d-e1-ft#https://enginemailerblobv1.blob.core.windows.net/images/08b941a9-ecfa-46d2-b0d3-e95efa91fe41/enginemailer-forever-free.png" alt="Image" title="https://www.enginemailer.com/?utm_source=newsletter&amp;utm_medium=email&amp;utm_campaign=ff_footer" style="outline:none;text-decoration:none;clear:both;display:block!important;border:0;height:auto;float:none;width:100%;max-width:168px" width="168">
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div></div>`
            }

            await sgMail.send(msg)

            response.status(200).json({
                message: "Successfully found email and email sent",
                data: user
            })
        } else {
            response.status(200).json({
                message: "Email Does Not Exist",
                status: "Email Check Failed"
            })
        }
    }catch(error){
        response.status(400).json({
            message: "Email Does Not Exist",
            data: error
        })
    }
})

export default router